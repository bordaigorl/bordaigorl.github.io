<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emanuele D'Osualdo</title>
    <description>My research, projects and blog</description>
    <link>http://emanueledosualdo.com/</link>
    <atom:link href="http://emanueledosualdo.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 31 Oct 2017 01:46:17 +0000</pubDate>
    <lastBuildDate>Tue, 31 Oct 2017 01:46:17 +0000</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>Why Computer Science is a Science</title>
        <description>&lt;p&gt;The Winter semester just ended here in Kaiserslautern and I gave the last lecture of the &lt;a href=&quot;http://concurrency.cs.uni-kl.de/teaching/ConcurrencyTheory_WS_2016_2017.html&quot;&gt;Concurrency Theory course&lt;/a&gt; I taught.
We covered Petri nets, WSTS and Process Algebra, exploring their theory with the underlying goal of automatic verification.&lt;/p&gt;

&lt;p&gt;In the middle of the course, I realised that there were times where the students were slightly disoriented by the change of register when changing topic. To help them follow better, I came up with a simple notion that helped guiding them to pay attention to the right details.
What I believe was causing the disorientation was what I called a switch from &lt;strong&gt;problem solving mode&lt;/strong&gt; to &lt;strong&gt;conceptual mode&lt;/strong&gt;.
I think making this difference explicit and declaring when I was making the switch helped my student follow the line of reasoning more tightly.
But I believe these two modes of thinking also help understand why Computer Science is rightfully considered to be part of the Natural Sciences.&lt;/p&gt;

&lt;h1 id=&quot;problem-solving-mode-the-art-of-the-lemma&quot;&gt;Problem Solving mode: the Art of the Lemma&lt;/h1&gt;

&lt;p&gt;A lot of results in Theoretical Computer Science rely on hard combinatorial insights. As a consequence, the depth of a result in TCS is often related to the difficulty of this combinatorial core of the argument. Some researchers refer to this core as the “meat” of a result.&lt;/p&gt;

&lt;p&gt;When trying to come up with this kind of results,
or trying to understand them,
the mindset one adopts is what I call the &lt;strong&gt;problem solving mode&lt;/strong&gt;,
that is, your attention is directed to details of the mechanics of a formally well-defined problem, a “puzzle”.
An instance of a puzzle could be
    “How long can the minimal covering paths in a Petri net be?”.&lt;sup id=&quot;fnref:rackoff&quot;&gt;&lt;a href=&quot;#fn:rackoff&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;This mode of thinking is the main one used in engineering work:
you are presented with a complicated but circumscribed problem and apply some mathematical insight to provide a solution.
In CS, the puzzles we face range from the very practical
(“How do you sort an array as quickly as possible?”) 
to the very abstract
(“How do you reduce the halting problem to a problem in arithmetic?”).
But at the core, they require a similar mindset to find a solution.
I would call problem-solving the “Art of the Lemma”.&lt;/p&gt;

&lt;p&gt;Worthwhile puzzles are however never formulated in a vacuum:
they arise as milestones in a wider conceptual framework that motivates their relevance and allows them to be defined in the first place.
The activity of coming up with such a framework requires the use of what I call &lt;strong&gt;conceptual mode&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;conceptual-mode-the-art-of-the-definition&quot;&gt;Conceptual mode: the Art of the Definition&lt;/h1&gt;

&lt;p&gt;Problem solving mode is what makes many put CS and Engineering together in the same category.
I would argue that CS as a whole, sets itself aside from pure Engineering because of its substantial use of what I call &lt;strong&gt;conceptual mode&lt;/strong&gt;.
This mode of thinking is characterised by the exploratory experimentation with some basic phenomenon that we are trying to understand. The conceptualisation process works by formulating rigorous models of the phenomenon at hand and putting these models to test.
It heavily involves abstraction, formalisation and generalisation abilities. 
The outcome of the process is a set of basic assumptions and definitions that would form the basis for a &lt;em&gt;language&lt;/em&gt; to express facts and properties regarding the phenomenon under study.
I would call conceptualisation the “Art of the Definition”.&lt;/p&gt;

&lt;p&gt;Problems that are solved by employing the conceptual mindset are typically not well-defined and ambiguous. Examples could be “What is behaviour?”&lt;sup id=&quot;fnref:beh&quot;&gt;&lt;a href=&quot;#fn:beh&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; or “What does it mean for an analysis to be sound?”.&lt;sup id=&quot;fnref:absint&quot;&gt;&lt;a href=&quot;#fn:absint&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Big tech companies like Google or Facebook have interview processes set up to test the purely problem-solving abilities of candidates. Their reputation then does the rest: the problem solving aspect of CS is often over-emphasised and CS may be reduced to puzzle-solving from the perspective of an outsider.
This makes sense if you consider that these companies are looking, most of the times, for Software Engineers. But in a University we aim at forming professionals that are prepared both technically &lt;em&gt;and&lt;/em&gt; culturally. Only a balance between the conceptual and problem solving aspects of our discipline can achieve this.&lt;/p&gt;

&lt;h1 id=&quot;zen-in-the-art-of-research&quot;&gt;Zen in the Art of Research&lt;/h1&gt;

&lt;p&gt;The two modes are both absolutely essential in solving typical CS problems.
They are not competing but simply complementary.
I find that making the switch between the two modes a conscious process,
helps focusing on the important aspects of the problem and coming to a solution in a more enlightened way.&lt;/p&gt;

&lt;p&gt;Conceptualisation provides direction and a strong relation with the phenomenon of study, producing puzzles that are not meaningless tricks.
Problem solving gives depth to conceptualisation, allowing non-obvious consequences to be drawn from the premises.&lt;/p&gt;

&lt;p&gt;If I think of the state of mind when doing conceptual work, I am reminded of the very nice description of the process of shooting an arrow in the book “Zen in the art of archery”, by the philosopher Eugen Herrigel. Although the book has many limitations, I still appreciate the attempt of the author to communicate to a Western audience ideas grounded in assumptions so distant from ours. Anyway, the description of the state of mind when shooting an arrow resonates, I think, with what one frequently experiences when doing research. The almost obsessive search for the right shot done in the training, striving for a liberation from preconceived assumptions, or emotional attachments to a dead-end. Then the moment of enlightenment: The Definition flows finally in a shape that feels right. And lemmas start to fall into place.
The arrow leaves the bow and hits the target.
Once The Definition has been produced, it may result completely obvious to the authors and even obvious to the readers. But this should not fool them: the path leading to its formulation was not obvious at all and to really appreciate its depth the reader must often go through the same path him/herself.&lt;/p&gt;

&lt;h1 id=&quot;computer-science-is-a-science&quot;&gt;Computer Science is a Science&lt;/h1&gt;

&lt;p&gt;One may argue that Theoretical Computer Science is actually a branch of Mathematics and as such is not related to the Natural world in the same way as Biology or Physics are. I disagree with this position: the subject matter of CS is &lt;em&gt;information&lt;/em&gt; and &lt;em&gt;computation&lt;/em&gt;. Both are essential aspects of natural phenomena: every time we witness a computation in the physical world we are putting the theories of CS to the test.
In fact this can be traced back to the beginning of CS as a discipline, which was marked by two complementary discoveries: the conceptual framework of computable functions and the technical possibility of testing this framework with computers.&lt;/p&gt;

&lt;p&gt;Pure problem solving is essentially Engineering.
Pure conceptual mode is Philosophy.
Computer Science hits that sweet spot in between the two: it is the combination of the two modes that gives the discipline the relevance and depth of a Science.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:rackoff&quot;&gt;
      &lt;p&gt;The answer is doubly-exponential in the size of the input, as proved in Rackoff’s lower-bound for Petri net coverability. &lt;a href=&quot;#fnref:rackoff&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:beh&quot;&gt;
      &lt;p&gt;In the course we answer this question by introducing Bisimulations. The general question of “What is the meaning of a program” led to the development of the field of Semantics. &lt;a href=&quot;#fnref:beh&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:absint&quot;&gt;
      &lt;p&gt;A compelling answer can be found in the Abstract Interpretation framework. &lt;a href=&quot;#fnref:absint&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 14 Feb 2017 00:00:00 +0000</pubDate>
        <link>http://emanueledosualdo.com/blog/2017/why-computer-science-is-a-science.html</link>
        <guid isPermaLink="true">http://emanueledosualdo.com/blog/2017/why-computer-science-is-a-science.html</guid>
        
        <category>science</category>
        
        
      </item>
    
      <item>
        <title>The art of the misspelling</title>
        <description>&lt;p&gt;My name is Emanuele D’Osualdo.
I know what you are thinking, and I do not blame you.
Actually, let me get this straight from the start:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I hereby forgive you, fully and pre-emptively,
for misspelling or mispronouncing my name or surname.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yes, my name is long and complicated (although it has been pointed out to me that Polish names can be orders of magnitude more complicated),
but in fact I am always amused from the strange misspellings I collected during the years.&lt;/p&gt;

&lt;p&gt;Before going into that, if you are wondering about the pronunciation,
here is my name pronounced correctly:&lt;/p&gt;

&lt;audio src=&quot;/doc/name.mp3&quot; controls=&quot;controls&quot;&gt;
  &lt;a href=&quot;/doc/name.mp3&quot; class=&quot;button&quot;&gt;
      Click here to play
      &lt;i class=&quot;fa fa-play&quot;&gt;&lt;/i&gt;
  &lt;/a&gt;
&lt;/audio&gt;

&lt;h1 id=&quot;misspellings-of-dosualdo&quot;&gt;Misspellings of D’Osualdo&lt;/h1&gt;

&lt;p&gt;My surname is weird even to Italian ears. Common misspellings include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;D’Osvaldo&lt;/strong&gt; (Osvaldo is an old-fashioned Italian name)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D’Osvualdo&lt;/strong&gt; (if you are not sure, put both)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D’Osvivaldo&lt;/strong&gt; (strangely reminiscent of Vivaldi)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gesualdo&lt;/strong&gt; (another Italian composer!)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D’Osulado&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;d’odusldo&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dosualvo&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dosvalbo&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Dosvlaudo&lt;/strong&gt; — or something like this where it is clear that the one who typed it simply gave up after three letters&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;d’Osualdo&lt;/strong&gt; or just &lt;strong&gt;Osualdo&lt;/strong&gt; — I get this a lot in Germany, where they seem to interpret the “D’” as an optional decoration. Main drawback: I may be listed under “O” in alphabetic order!&lt;/li&gt;
  &lt;li&gt;New entry: &lt;strong&gt;Dr. Oswaldo&lt;/strong&gt; — that’s how Germans tend to pronounce it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;the-apostrophe&quot;&gt;The apostrophe&lt;/h1&gt;

&lt;p&gt;A separate category of misspellings concerns the apostrophe:
we are in 2016 and still computer systems systematically stumble when dealing with my surname.
The apostrophe is to an online form
what a mouse is to an elephant.&lt;/p&gt;

&lt;p class=&quot;centered&quot;&gt;&lt;img src=&quot;/images/posts/2016-11-02-the-art-of-the-misspelling/cyberman.gif&quot; /&gt; 
  &lt;img src=&quot;/images/posts/2016-11-02-the-art-of-the-misspelling/apostrophe.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes it is simply rejected, sometimes the apostrophe gets removed with arbitrary fixes such as replacing it with a space or removing the character altogether.
And these are the good cases. In others it simply makes the system fail because of improper handling of user-provided data.
Yes I am &lt;a href=&quot;http://xkcd.com/327/&quot;&gt;Little Bobby Tables&lt;/a&gt;!&lt;/p&gt;

&lt;p class=&quot;wide-image&quot;&gt;&lt;a href=&quot;http://xkcd.com/327/&quot;&gt;&lt;img src=&quot;http://imgs.xkcd.com/comics/exploits_of_a_mom.png&quot; alt=&quot;Exploits of a mom (xkcd.com)&quot; title=&quot;Exploits of a mom (xkcd.com)&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In fact it is the apostrophe in my surname that made me independently come up with my first SQL-injection exploit. Good times.&lt;/p&gt;

&lt;p&gt;In Germany the problem is aggravated by the fact that the German language uses the apostrophe very rarely, so people just use the acute accent symbol ` instead, which is more easily found on keyboards!&lt;/p&gt;

&lt;p&gt;And then there’s my first name.&lt;/p&gt;

&lt;h1 id=&quot;the-curse-of-emmanuelle&quot;&gt;The curse of Emmanuelle&lt;/h1&gt;

&lt;p&gt;To make things worse, my first name, &lt;em&gt;Emanuele&lt;/em&gt;, lends itself to all sorts of ambiguities and misspellings.
The list of similar, but distinct, names is long:
Emmanuele, Emmanuelle, Emanuelle, Manuel, Manuele, Manuelle…
To those you have to add the misspellings (once I got Emanuale).
Pronunciation is a further issue: at best I get something that resembles &lt;em&gt;manual&lt;/em&gt;, at worst I get some irrecognisable mash of &lt;em&gt;m&lt;/em&gt;s, &lt;em&gt;n&lt;/em&gt;s and &lt;em&gt;l&lt;/em&gt;s.&lt;/p&gt;

&lt;p&gt;The funniest story around my first name comes from my Erasmus in Turkey.
I arrive in Istanbul and go to my hostel.
They ask for my ID, start transcribing the data…when they stop at the name and start giggling.
Ok, fine, it’s a strange name, whatever, just give me the keys of the room.
After some rest, I go back to the reception and the guy starts giggling again after seeing me. Uh, ok, weird. I explore the surroundings, go back to the hostel. Now the receptionist is with a friend and as soon as I show up he says my name in a very refined attempt to signal to his friend that “This is the guy I told you about”. Ok, guy from the reception, I confront you: what’s so funny?!?
«Well…you know…when I was little…there was this, uhm, “movie”, you know the ones that they play late at night…it was called &lt;em&gt;Emmanuelle&lt;/em&gt;. Every Turk knows it!»
This is true, apparently “Emmanuelle” was a popular &lt;a href=&quot;https://en.wikipedia.org/wiki/Emmanuelle_(film)&quot;&gt;erotic movie from the seventies&lt;/a&gt;.
Except:&lt;/p&gt;

&lt;p class=&quot;centered&quot;&gt;THE MALE ITALIAN NAME EMANUELE&lt;br /&gt;
IS &lt;strong&gt;NOT&lt;/strong&gt;&lt;br /&gt;
THE FEMALE FRENCH NAME EMMANUELLE&lt;/p&gt;

&lt;p&gt;Beside the spelling and the different language,
the pronunciation is completely different.
Of course to Turkish ears the two are indistinguishable.
With obvious repercussions on my introductions:&lt;/p&gt;

&lt;p&gt;- «Hello I am Murat»&lt;br /&gt;
- «Nice to meet you, I am…MANU»&lt;br /&gt;
[Friend who knew me from before]&lt;br /&gt;
- «“Manu”? No…tell him your full name!»&lt;/p&gt;

&lt;p&gt;Yes, every time I introduced myself to a &lt;em&gt;male&lt;/em&gt; Turkish guy I got the giggles back!&lt;/p&gt;

&lt;!-- ## The worst list of nicknames on earth

Although people used many nicknames for me in the past---Ema, Emanu, Lele, Dosu---the one that I commonly use is Manu.
Feel free to use it! --&gt;

</description>
        <pubDate>Wed, 02 Nov 2016 00:00:00 +0000</pubDate>
        <link>http://emanueledosualdo.com/blog/2016/the-art-of-the-misspelling.html</link>
        <guid isPermaLink="true">http://emanueledosualdo.com/blog/2016/the-art-of-the-misspelling.html</guid>
        
        <category>fun</category>
        
        
      </item>
    
      <item>
        <title>What is that weird animation on my homepage?</title>
        <description>&lt;p&gt;So nice of you to ask! What you are looking at is an example of the systems we study in Concurrency Theory. In short, it is an example of a mathematical formalisation of a simple internet protocol; the aim of our research is to design algorithms that can prove properties of these kinds of models.&lt;/p&gt;

&lt;p&gt;The simulation on the homepage is running a fixed program modelling a server/client system. The orange boxes are the clients, the blue ones are servers;
the green boxes are messages to the server (dark) or to the clients (light).&lt;/p&gt;

&lt;div class=&quot;large stargazer with-controls&quot; data-zoom=&quot;.5&quot; data-gravity=&quot;true&quot; data-play-on-load=&quot;true&quot;&gt;
    &lt;script type=&quot;text/x-stargazer&quot;&gt;
          new s. (S[s] | new m.C[s,m] | new m.C[s,m] | new m.C[s,m])
        | new s. (S[s] | new m.C[s,m] | new m.C[s,m])
        | new s. (S[s] | new m.C[s,m] )
        | new s. (S[s] | new m.C[s,m] | new m.C[s,m] | new m.C[s,m])

        S[s] := s(x).νd.( A[x,d] | S[s] )
        E := 0
        C[s, m] := τ.( Q[s,m] | C1[s,m])
        C1[s, m] := m(x).C[s, m]
        Q[s,m] := s&lt;m&gt;
        A[x,d] := x&lt;d&gt;
    &lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;More precisely, the displayed animation is a visual simulation of the evolution of a &lt;a href=&quot;https://en.wikipedia.org/wiki/%CE%A0-calculus&quot;&gt;π‑calculus&lt;/a&gt; program. The boxes are sequential processes, i.e. threads, and the dots are names, i.e. channels.&lt;/p&gt;

&lt;p&gt;You can try the simulator and experiment with the π‑calculus by clicking here:&lt;/p&gt;

&lt;p class=&quot;centered&quot;&gt;&lt;a href=&quot;http://stargazer.emanueledosualdo.com&quot; class=&quot;button primary&quot;&gt;&lt;i class=&quot;fa fa-rocket&quot;&gt;&lt;/i&gt;Stargazer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I wrote the simulator in JavaScript and &lt;a href=&quot;https://d3js.org/&quot;&gt;D3.js&lt;/a&gt; to support my presentation on the contents of &lt;a href=&quot;/research/#thesis&quot;&gt;my Ph.D. thesis&lt;/a&gt;. The code evolved from a simple prototype and I am in the process of rewriting it completely.
I hope you will enjoy it even if it is unfinished!&lt;/p&gt;

&lt;blockquote class=&quot;note&quot;&gt;
  &lt;p&gt;&lt;a href=&quot;/feed.xml&quot; class=&quot;button primary&quot;&gt;Subscribe&lt;/a&gt;
If you’d like to know more, watch this space for an upcoming write-up about the π‑calculus&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Tue, 09 Aug 2016 00:00:00 +0100</pubDate>
        <link>http://emanueledosualdo.com/explain-picalc.html</link>
        <guid isPermaLink="true">http://emanueledosualdo.com/explain-picalc.html</guid>
        
        <category>picalculus</category>
        
        
      </item>
    
  </channel>
</rss>
